#include <cstdio>
#include <cassert>
const char* ans[66] = {
"1.7182818284590452353602874713526624977572470936999595749669676277240766",
"0.8731273138361809414411498854106499910289883747998382998678705108963064",
"1.6903090292457285878382751718840250134565174378002425501981942336555404",
"1.0129913099027641790512113827538374125326366542984234237117374812389874",
"0.8511250528462291621779061878249004844346277608087318071349924115994544",
"0.8391839763994994256603689840591245290218896769915107430632018220560860",
"0.9990600540482461531140846450270987978844422231783321822946484601050576",
"1.0183001231004454734234270405457638602129609342498267041400606652066120",
"0.4212463007639586475465668522569660895760567433887735005505311880381920",
"0.2786251170903605187425347545347722929638886224018248283417804226785960",
"1.0000526415867715139439140611635410929235093661141430597060066263111470",
"0.9984483723299382568268387178169179594316180755336091559128973410848240",
"0.5105791792312411222312143045367726430920996076117524675727661465862380",
"0.1396628616968100025664164954328509874944886113883019907516371538260800",
"0.0694811276967752580880591295509606527347000055067614187950716344262580",
"0.9999975939486582685846763425946823321929666903704104119576035353489384",
"1.0000998014733356176039702748826807813478983478455885883649900699510820",
"0.4990191752274595967912934050764328896781377014278964404081170445224320",
"0.1704895390402274037395388939937569965983870278785847298573680926628960",
"0.0348011156854306817682964311699413924928142869551933373011243282348400",
"0.0138720048045378305279050793524077040967542874206272325975789224765672",
"1.0000000929133616326653603720014378682552874386073106156488627437403106",
"0.9999948449557943262152410397989482667304269218957800333321033175134496",
"0.5000687404028725106785857559137580358528519609259819907369845688987560",
"0.1662912783385757481903694906444564118995299898862425285418979951576000",
"0.0426728545010275359229890624498799888031712331908349647676307610572700",
"0.0069448746468125988717755638260617393436401747332626004270532615928288",
"0.0023090433859084105520431718421153215843713708957882107235085536279128",
"0.9999999968933990386869207288829329127650789642455903885479075078057376",
"1.0000002220736995890078610544352257741821014861521127509855965298495376",
"0.4999961493111514629782155583240116852552453434654903024148262023615680",
"0.1666945621814704576368705883652694707751223091111963525538889203642000",
"0.0415638239330670849451110437176440768952923553222119487346557167391200",
"0.0085418786646756482799199108004814524909857588640797435145373254109648",
"0.0011556515952295415350500323605899732001773379124202740492145075370368",
"0.0003295405116225340048551827090072423954840094238194104783697274545360",
"1.0000000000915906272177904397702908963333333528722798565578453739266654",
"0.9999999918039052147852418705454509572677855050304710542700701691427360",
"0.5000001790325530118740512763950709812557750130942199949365375147305960",
"0.1666650108911924324007419891775013001045713985005119407280059629913280",
"0.0416746412716096795805932906717747169098582701122784930817168068873900",
"0.0083113786005070514381168371358897212606886561007413312726502579025632",
"0.0014245683367595711838202849692803263021906244696484216647494196301720",
"0.0001648976086449648321387015200131486595575074500062588770218220913920",
"0.0000411607257443922931791202972485234339816254934532879003369763407860",
"0.9999999999975850390181492388731213283060693864949673532742743210047960",
"1.0000000002644081527529499512907120797215424789885963497914649321109820",
"0.4999999929014883765844734999993262872731215860154634934658527294291840",
"0.1666667481144623617701345688711184439426700512355726211210639591378400",
"0.0416661723081687739048044646653911406991273380288576761655590756731440",
"0.0083350916981415873303255499537637346507352659343196186378919053024520",
"0.0013850465073686780301390969394903039854462747470179427226800072970240",
"0.0002036128700891050643161918349094970514703398313585647794571647850880",
"0.0000205932431021927948348285674598383507779332908598753896682005347600",
"0.0000045705516982665551876203843974855740452649339096472245930612902280",
"1.0000000000000575910537049146410887449805911610690468523177427564356626",
"0.9999999999924274288418256168142962455241472758398514550099370347156560",
"0.5000000002449679221848305308625538106027920710315756525671059591029860",
"0.1666666632564765014993422122293781743553666688271654492843599717961280",
"0.0416666920633321680634076490960502919213605552803516036653709981411300",
"0.0083332205795533683593540860033907902506956838289414796385689844177024",
"0.0013892045486758312989645723847635137633120127589693627211753870409120",
"0.0001978425270506066504359401965711651148403360596708798835860255486720",
"0.0000254619700409258315462908873078059223094989732213595205594742654860",
"0.0000022864575788609330266874442218958491292217742832719533107353424800",
"0.0000004568188238811244321865880351179449832086319252750542564651895496"};
int n;
int main()
{
    while(scanf("%d", &n) == 1)
    {
        assert(0 <= n && n <= 10);
        for(int i = n * (n + 1) >> 1, j = (n + 1) * (n + 2) >> 1; i < j; ++i)
            puts(ans[i]);
    }
    return 0;
}
