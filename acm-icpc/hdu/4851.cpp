#include <cstdio>
const char* ans[66] = {
"1.71828182845904523536028747135266249775724709369995957496",
"0.87312731383618094144114988541064999102898837479983829986",
"1.69030902924572858783827517188402501345651743780024255019",
"1.01299130990276417905121138275383741253263665429842342371",
"0.85112505284622916217790618782490048443462776080873180713",
"0.83918397639949942566036898405912452902188967699151074306",
"0.99906005404824615311408464502709879788444222317833218229",
"1.01830012310044547342342704054576386021296093424982670414",
"0.42124630076395864754656685225696608957605674338877350055",
"0.27862511709036051874253475453477229296388862240182482834",
"1.00005264158677151394391406116354109292350936611414305970",
"0.99844837232993825682683871781691795943161807553360915591",
"0.51057917923124112223121430453677264309209960761175246757",
"0.13966286169681000256641649543285098749448861138830199075",
"0.06948112769677525808805912955096065273470000550676141879",
"0.99999759394865826858467634259468233219296669037041041195",
"1.00009980147333561760397027488268078134789834784558858836",
"0.49901917522745959679129340507643288967813770142789644040",
"0.17048953904022740373953889399375699659838702787858472985",
"0.03480111568543068176829643116994139249281428695519333730",
"0.01387200480453783052790507935240770409675428742062723259",
"1.00000009291336163266536037200143786825528743860731061564",
"0.99999484495579432621524103979894826673042692189578003333",
"0.50006874040287251067858575591375803585285196092598199073",
"0.16629127833857574819036949064445641189952998988624252854",
"0.04267285450102753592298906244987998880317123319083496476",
"0.00694487464681259887177556382606173934364017473326260042",
"0.00230904338590841055204317184211532158437137089578821072",
"0.99999999689339903868692072888293291276507896424559038854",
"1.00000022207369958900786105443522577418210148615211275098",
"0.49999614931115146297821555832401168525524534346549030241",
"0.16669456218147045763687058836526947077512230911119635255",
"0.04156382393306708494511104371764407689529235532221194873",
"0.00854187866467564827991991080048145249098575886407974351",
"0.00115565159522954153505003236058997320017733791242027404",
"0.00032954051162253400485518270900724239548400942381941047",
"1.00000000009159062721779043977029089633333335287227985655",
"0.99999999180390521478524187054545095726778550503047105427",
"0.50000017903255301187405127639507098125577501309421999493",
"0.16666501089119243240074198917750130010457139850051194072",
"0.04167464127160967958059329067177471690985827011227849308",
"0.00831137860050705143811683713588972126068865610074133127",
"0.00142456833675957118382028496928032630219062446964842166",
"0.00016489760864496483213870152001314865955750745000625887",
"0.00004116072574439229317912029724852343398162549345328790",
"0.99999999999758503901814923887312132830606938649496735327",
"1.00000000026440815275294995129071207972154247898859634979",
"0.49999999290148837658447349999932628727312158601546349346",
"0.16666674811446236177013456887111844394267005123557262112",
"0.04166617230816877390480446466539114069912733802885767616",
"0.00833509169814158733032554995376373465073526593431961863",
"0.00138504650736867803013909693949030398544627474701794272",
"0.00020361287008910506431619183490949705147033983135856477",
"0.00002059324310219279483482856745983835077793329085987538",
"0.00000457055169826655518762038439748557404526493390964722",
"1.00000000000005759105370491464108874498059116106904685231",
"0.99999999999242742884182561681429624552414727583985145500",
"0.50000000024496792218483053086255381060279207103157565256",
"0.16666666325647650149934221222937817435536666882716544928",
"0.04166669206333216806340764909605029192136055528035160366",
"0.00833322057955336835935408600339079025069568382894147963",
"0.00138920454867583129896457238476351376331201275896936272",
"0.00019784252705060665043594019657116511484033605967087988",
"0.00002546197004092583154629088730780592230949897322135952",
"0.00000228645757886093302668744422189584912922177428327195",
"0.00000045681882388112443218658803511794498320863192527505"};
int main()
{
	for(int n; scanf("%d", &n) == 1; )
		for(int i = n * (n + 1) >> 1, j = (n + 1) * (n + 2) >> 1; i < j; ++i)
			puts(ans[i]);
    return 0;
}
